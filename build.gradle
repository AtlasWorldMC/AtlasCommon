plugins {
    id 'java'
    id 'org.ajoberstar.grgit' version '5.2.1'
    id 'signing'
}

group = "${project_group}"
version = "${project_version}"

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    eclipse {
        classpath {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    repositories {
        maven {
            url "https://repository.atlasworld.fr/repository/maven-public/"
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    publishing {
        boolean isSnapshot = System.getenv("SNAPSHOT") == 'true';

        repositories {
            maven {
                name 'AtlasWorld-Repo'

                def release = "https://repository.atlasworld.fr/repository/maven-release/"
                def snapshot = "https://repository.atlasworld.fr/repository/maven-snapshot/"
                url = isSnapshot ? snapshot : release

                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }

                metadataSources {
                    gradleMetadata()
                }
            }
        }
        publications {
            AtlasCommon(MavenPublication) {
                from components.java

                def snapshot = "${project_version}-${grgit.head().id.subSequence(0, 5)}"

                version = isSnapshot ? snapshot : grgit.tag.list().get(0).getName();

                pom {
                    name = 'AtlasCommon'
                    description = 'Common Code Utilities for AtlasWorld.'
                    licenses {
                        license {
                            name = 'GNU-GPL-v2.0'

                            url = 'https://github.com/AtlasWorldMC/AtlasCommon/blob/master/LICENSE'
                        }
                    }
                }
            }
        }
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }
}